56. Merge Intervals (LeetCode)
//Given a collection of intervals, merge all overlapping intervals.
//Input: [[1,3],[2,6],[8,10],[15,18]]
//Output: [[1,6],[8,10],[15,18]]
//Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].

class Solution:
    def merge(self, intervals: 'List[Interval]') -> 'List[Interval]':
        if not intervals:
            return []
        intervals.sort(key=lambda i:i.start)
        
        res = []
        start = intervals[0].start
        end = intervals[0].end
        
        for i in range(1, len(intervals)):
            interval = intervals[i]
            if interval.start <= end:
                end = max(end, interval.end)
            else:
                res.append([start, end])
				
                start = interval.start
                end = interval.end

        res.append([start, end])

        return res
